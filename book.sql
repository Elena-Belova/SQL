TASK 1
-- выборка данных

/* Вывести всю информацию о книгах, для каждой позиции посчитать ее стоимость, вычисляемому столбцу дать имя total */
SELECT title, author, price, amount, 
       price * amount AS total 
  FROM book;

/* Посчитать стоимость упаковки для каждой книги, если для упаковки одной книги требуется один лист бумаги, цена которого 1 рубль 65 копеек, 
вывести название книги, ее количество и стоимость упаковки, последний столбец назвать pack */
SELECT title, amount, 
       amount * 1.65 AS pack 
  FROM book;

/* Для каждой книги из таблицы book вычислить налог на добавленную стоимость (имя столбца tax), который включен в цену и составляет k = 18%, 
а также цену книги (price_tax) без него, округлить полученные значения */
SELECT title, price, 
       ROUND((price*18/100)/(1+18/100), 2) AS tax, 
       ROUND(price/(1+18/100), 2) AS price_tax 
FROM book;

/* Цену всех книг на складе снижают на 30%. Написать SQL запрос, который выбирает названия, авторов, количество и вычисляет новые цены книг,
столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой */
SELECT title, author, amount, 
       ROUND(price * 0.7, 2) AS new_price
  FROM book;

/* Для каждой книги из таблицы book установим скидку следующим образом: если количество книг меньше 4, то скидка будет составлять 50% от цены, 
в противном случае 30%, цена по скидке должна отображаться с двумя знаками после запятой */
SELECT title, amount, price, 
       ROUND(IF(amount<4, price*0.5, price*0.7), 2) AS sale
FROM book;

/* Вычисление скидки в зависимости от количества книг: если количество книг меньше 4 – скидка 50%, меньше 11 – 30%, в остальных случаях – 10%, указать
какая именно скидка на каждую книгу */
SELECT title, amount, price,
       ROUND(IF(amount < 4, price * 0.5, IF(amount < 11, price * 0.7, price * 0.9)), 2) AS sale,
       IF(amount < 4, 'скидка 50%', IF(amount < 11, 'скидка 30%', 'скидка 10%')) AS 'Ваша_скидка'
FROM book;

/* Исходя из анализа по продажам решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. 
Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price, значение округлить до двух знаков после запятой. */
SELECT author, title, 
       ROUND(IF(author = 'Булгаков М.А.', price * 1.1, 
             IF(author = 'Есенин С.А.', price * 1.05, price)), 2) AS new_price
  FROM book;

/* Вывести название, автора и общую стоимость тех книг, стоимость которых больше 4000 рублей */
SELECT title, author, 
       price * amount AS total
  FROM book
 WHERE price * amount > 4000;

/* Вывести автора, название и цены книг, количество которых меньше 10 */
SELECT author, title, price
  FROM book
 WHERE amount < 10;

/* Вывести название, цену тех книг, которые написал Булгаков или Есенин, ценой больше 600 рублей */
SELECT title, author, price 
  FROM book
 WHERE (author = 'Булгаков М.А.' OR author = 'Есенин С.А.') 
   AND price > 600;

/* Вывести название, автора, цену и количество всех книг, цена которых меньше 500 или больше 600, а стоимость 
всех экземпляров этих книг больше или равна 5000 */
SELECT title, author, price, amount
  FROM book
 WHERE (price < 500 OR price > 600) 
   AND price * amount >= 5000;

/* Выбрать названия и количества книг, количество которых от 5 до 14 включительно. */
SELECT title, amount 
  FROM book
 WHERE amount BETWEEN 5 AND 14;

/* Выбрать названия и цены книг, написанных Булгаковым или Достоевским */
SELECT title, price 
  FROM book
 WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');

/* Вывести название и авторов книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),
а количество или 2, 3, 5 или 7 */
SELECT title, author
  FROM book
 WHERE (price BETWEEN 540.50 AND 800) 
   AND amount IN (2, 3, 5, 7);

/* Вывести название, автора и цены книг, информацию  отсортировать по названиям книг в алфавитном порядке */
SELECT title, author, price
  FROM book
 ORDER BY title;

/* Вывести автора, название и количество книг, в отсортированном в алфавитном порядке по автору и по убыванию количества, 
для тех книг, цены которых меньше 750 рублей */
SELECT author, title, 
       amount AS 'Количество'
  FROM book
 WHERE price < 750
 ORDER BY author, amount DESC;

/* Вывести автора и название книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). Информацию  отсортировать 
сначала по авторам (в обратном алфавитном порядке), затем по названиям книг (по алфавиту) */
SELECT author, title
  FROM book
 WHERE amount BETWEEN 2 AND 14
 ORDER BY author DESC, title;

/* Вывести названия книг, начинающихся с буквы «Б» */
SELECT title 
  FROM book
 WHERE title LIKE 'Б%';

/* Вывести книги, название которых длиннее 5 символов. */
SELECT title 
  FROM book 
 WHERE title LIKE "______%";

/* Вывести названия книг, которые состоят ровно из одного слова, если считать, что 
слова в названии отделяются друг от друга пробелами  */
SELECT title 
  FROM book 
 WHERE title NOT LIKE "% %";

/* Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и 
инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
Информацию отсортировать по названию книги в алфавитном порядке */
SELECT title, author
  FROM book
 WHERE title LIKE "_% _%"
   AND author LIKE "%С.%"
 ORDER BY title;

/* Вывести список книг из базы в порядке увеличения букв в названии */
SELECT title
  FROM book
 ORDER BY (LENGTH(title));
 
TASK 2
-- групповые операции
 
/* Отобрать уникальные элементы столбца amount таблицы book */
SELECT DISTINCT amount
  FROM book;

/* Посчитать, количество различных книг и количество экземпляров книг каждого автора, хранящихся на складе, 
столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно. */
SELECT author AS 'Автор',
       COUNT(amount) AS 'Различных_книг',
       SUM(amount) AS 'Количество_экземпляров'
  FROM book
 GROUP BY author;

/* Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора, 
вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно. 
Среднюю цену округлить до двух знаков после запятой */
SELECT author, 
       MIN(price) AS 'Минимальная_цена',
       MAX(price) AS 'Максимальная_цена',
       ROUND (AVG(price), 2) AS 'Средняя_цена'
  FROM book
 GROUP BY author;

/* Вывести суммарную стоимость книг каждого автора.  */
SELECT author, 
       SUM(price * amount) AS 'Стоимость'
  FROM book
 GROUP BY author;

/* Для каждого автора вычислить суммарную стоимость книг (имя столбца Стоимость), а также вычислить налог на добавленную стоимость 
для полученных сумм (имя столбца НДС), который включен в стоимость и составляет 18%, а также стоимость книг без него (Стоимость_без_НДС).
Значения округлить до двух знаков после запятой */
SELECT author,
       SUM(price * amount) AS 'Стоимость',
       ROUND((SUM(price * amount) * 0.18/1.18), 2) AS 'НДС',
       ROUND ((SUM(price * amount)/1.18), 2) AS 'Стоимость_без_НДС'
  FROM book
 GROUP BY author;

/* Посчитать общее количество экземпляров книг на складе и их стоимость */
SELECT SUM(amount) AS 'Количество', 
       SUM(price * amount) AS 'Стоимость'
  FROM book;

/* Вывести цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. 
Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. 
Среднюю цену округлить до двух знаков после запятой */
SELECT MIN(price) AS 'Минимальная_цена',
       MAX(price) AS 'Максимальная_цена',
       ROUND (AVG(price), 2) AS 'Средняя_цена'
  FROM book;

/* Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг которых больше 5000. 
Результат вывести по убыванию минимальной цены. */
SELECT author,
       MIN(price) AS 'Минимальная_цена', 
       MAX(price) AS 'Максимальная_цена'
  FROM book
 GROUP BY author
HAVING SUM(price * amount) > 5000 
 ORDER BY 'Минимальная_цена' DESC;

/* Вычислить среднюю цену и суммарную стоимость тех книг, количество которых принадлежит интервалу от 5 до 14, включительно. 
Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой */
SELECT ROUND (AVG(price), 2) AS 'Средняя_цена',
       ROUND (SUM(price*amount), 2) AS 'Стоимость'
  FROM book
 WHERE amount BETWEEN 5 AND 14;

/* Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10*/
SELECT author,
       MIN(price) AS 'Минимальная_цена',
       MAX(price) AS 'Максимальная_цена'
  FROM book
 WHERE author != 'Есенин С.А.'
 GROUP BY author
HAVING SUM(amount) > 10;

/* Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». 
В результат включить только тех авторов, у которых суммарная стоимость книг более 5000 руб. 
Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости. */
SELECT author, 
       SUM(price*amount) AS 'Стоимость'
  FROM book
 WHERE title NOT IN ('Идиот', 'Белая гвардия')
 GROUP BY author
HAVING 'Стоимость' > 5000
 ORDER BY 'Стоимость' DESC;

/* Вывести суммарную стоимость, общее количество книг, минимальную и максимальную цену книг всех авторов, 
за исключением книги "Братья Карамазовы". В результирующую выборку включить авторов с общим количеством книг 
на складе более 1 или суммарной стоимостью более 5000. Данные отсортировать по возрастанию стоимости */
SELECT author AS 'Автор',
       SUM(price*amount) AS 'Стоимость',
       SUM(amount)       AS 'Количество',
       MIN(price)        AS 'Минимальная_цена',
       MAX(price)        AS 'Максимальная_цена'
  FROM book
 WHERE title <> 'Братья Карамазовы'
 GROUP BY author
HAVING 'Количество' > 1 OR 'Стоимость' > 5000
 ORDER BY 'Стоимость';

TASK 3
-- вложенные запросы

/* Вывести информацию о самых дешевых книгах, хранящихся на складе */
SELECT title, author, price, amount
  FROM book
 WHERE price = (SELECT MIN(price) 
                  FROM book);

/* Вывести информацию о книгах (автора, название и цену), цены которых меньше или равны средней цене книг на складе. 
Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги. */
SELECT author, title, price
  FROM book
 WHERE price <= (SELECT AVG(price)
                   FROM book)
 ORDER BY price DESC;

/* Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе 
не более чем на 150 рублей в отсортированном по возрастанию цены виде */
SELECT author, title, price
  FROM book
 WHERE price - (SELECT MIN(price)
                  FROM book) <= 150
 ORDER BY price;

/* Вывести информацию о книгах тех авторов, общее количество экземпляров книг которых не менее 12. */
SELECT title, author, amount, price
  FROM book
 WHERE author IN (SELECT author 
                    FROM book 
                   GROUP BY author 
                  HAVING SUM(amount) >= 12);

/* Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров 
которых в таблице book не дублируется. */
SELECT author, title, amount
  FROM book
 WHERE amount IN (SELECT amount
                    FROM book
                   GROUP BY amount
                  HAVING COUNT(amount) = 1);

/* Вывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора */
SELECT title, author, amount, price
FROM book
WHERE amount < ALL (
        SELECT AVG(amount) 
        FROM book 
        GROUP BY author);

/* Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора */
SELECT author, title, price
  FROM book
 WHERE price < ANY 
              (SELECT MIN(price)
                 FROM book
                GROUP BY author);

/* Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг
 на складе более чем на 3, также указать среднее значение количества экземпляров книг, значение округлить до ближайшего меньшего целого */
SELECT title, author, amount, 
       FLOOR((SELECT AVG(amount) FROM book)) AS 'Среднее_количество' 
  FROM book
 WHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;

/* Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров 
каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, 
текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. 
В результат не включать книги, которые заказывать не нужно */
SELECT title, author, amount, 
       (SELECT MAX(amount) FROM book) - amount AS 'Заказ'
  FROM book
 WHERE amount < (SELECT MAX(amount) FROM book);

/* Выставить счёт на закупку до максимального количества книг (Сумма_заказа). Сортировать по сумме по убыванию */
SELECT title, author, amount, 
       (SELECT MAX(amount) FROM book) - amount AS 'Заказ',
       price * ((SELECT MAX(amount) FROM book) - amount) AS 'Сумма_заказа'
  FROM book
 WHERE amount < (SELECT MAX(amount) FROM book)
 ORDER BY 'Сумма_заказа' DESC;

TASK 4
-- корректировка данных

/* Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М. */
INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
  FROM supply
 WHERE author NOT IN ('Булгаков М.А.', 'Достоевский Ф.М.');

/* Занести из таблицы supply в таблицу book только те книги, авторов которых нет в book, используя вложенный запрос */
INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE author NOT IN (SELECT author FROM book);

/* Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы */
UPDATE book
   SET price = price * 0.9
 WHERE amount BETWEEN 5 AND 10;

/* В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, 
чтобы оно не превышало количество экземпляров книг, указанных в столбце amount, цену тех книг, которые покупатель не заказывал,
снизить на 10% */
UPDATE book
   SET buy = IF(buy > amount, amount, buy),
       price = IF(buy = 0, price * 0.9, price);

/* Для тех книг в таблице book, которые есть в таблице supply, не только увеличить их количество в таблице book 
(на значение столбца amount таблицы supply), но и пересчитать их цену */
UPDATE book, supply 
   SET book.amount = book.amount + supply.amount,
       book.price = (book.price + supply.price)/2
 WHERE book.title = supply.title
   AND book.author = supply.author;

/* Удалить из таблицы supply все книги, названия которых есть в таблице book */
DELETE FROM supply 
WHERE title IN 
       (SELECT title 
        FROM book);

/* Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10 */
DELETE FROM supply
 WHERE author IN (SELECT author
                   FROM book
                  GROUP BY author
                 HAVING SUM(amount) > 10);

/* Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице 
book меньше среднего количества экземпляров книг в таблице book. В таблицу включить столбец amount, в котором для всех книг 
указать одинаковое значение - среднее количество экземпляров книг в таблице book */
CREATE TABLE ordering AS
SELECT author, title,
       (SELECT ROUND(AVG(amount))
          FROM book) AS amount
  FROM book
 WHERE amount < (SELECT AVG(amount)
                  FROM book);

/* Создать новую таблицу ordering, в которую занести из таблицы book книги, количество которых больше среднего количества 
в таблице book, при этом сделать на эти книги скидку в 30%, в названии добавить "SALE 30%: " */
CREATE TABLE ordering AS             
SELECT author AS 'Автор',
       CONCAT ('Скидка 30%: ', title) AS 'Название',
       price * 0.7 AS 'Цена'
FROM book
WHERE amount > (SELECT AVG(amount)
                  FROM book);

